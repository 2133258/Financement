<Window x:Class="CalculatriceHypothèque.View.GestionSimulation"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CalculatriceHypothèque.View" 
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:viewmodels="clr-namespace:CalculatriceHypothèque.ViewModels"
        d:DataContext="{d:DesignInstance Type=viewmodels:VMGestionSimulation}"
        mc:Ignorable="d"
        SizeToContent="WidthAndHeight"
        Title="GestionSimulation" MinHeight="300" MinWidth="700" FontWeight="Bold" FontSize="14">
    <Grid x:Name="ContentGrid" SizeChanged="ContentGrid_SizeChanged">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <GroupBox Header="Simulations" Grid.Column="0" Background="White" BorderBrush="Gray" Margin="5,5,5,10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <ListView x:Name="ListViewSimulation" 
                          ItemsSource="{Binding ListeSimulation, NotifyOnTargetUpdated=True}" 
                          TargetUpdated="ListViewTargetUpdated" 
                          SelectedItem="{Binding SimulationSelectionner, Mode=TwoWay}"  
                          GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler" 
                          Margin="5" Background="Transparent" 
                          BorderThickness="0" SelectionChanged="ListViewSimulation_SelectionChanged">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Gray" />
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Margin" Value="5,2"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="BorderBrush" Value="Gray" />
                                    <Setter Property="Background" Value="LightGreen" />
                                    <Setter Property="Margin" Value="5,2"/>
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Background" Value="White" />
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Margin" Value="5,2"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridView.ColumnHeaderContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="{x:Type GridViewColumnHeader}">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Margin" Value="2"/>
                                    <Setter Property="Padding" Value="2"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                                <Grid>
                                                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>
                            <GridViewColumn x:Name="columnNom" Header="Nom" DisplayMemberBinding="{Binding Nom}"/>
                            <GridViewColumn x:Name="columnPrenom" Header="Prenom"  DisplayMemberBinding="{Binding Prenom}"/>
                            <GridViewColumn x:Name="columnDescription" Header="Description" DisplayMemberBinding="{Binding Description}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Margin="10,5" Grid.Column="1" Command="{Binding SupprimerSimulation}">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="50"/>
                            </Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Width" Value="50"/>
                                <Setter Property="Height" Value="50"/>
                                <Setter Property="Padding" Value="0"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Trigger.Setters>
                                            <Setter Property="Cursor" Value="Hand"/>
                                        </Trigger.Setters>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Resources>
                        <Image Source="/View/Moins.png" Width="50" Height="50"/>
                    </Button>
                    <Button Margin="10,5" Grid.Column="0" Command="{Binding AjouterSimulation}">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="50"/>
                            </Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Width" Value="50"/>
                                <Setter Property="Height" Value="50"/>
                                <Setter Property="Padding" Value="0"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Trigger.Setters>
                                            <Setter Property="Cursor" Value="Hand"/>
                                        </Trigger.Setters>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Resources>
                        <Image Source="/View/Plus.png" Width="50" Height="50"/>
                    </Button>
                </Grid>
            </Grid>
        </GroupBox>
        <GroupBox Header="Informations" Grid.Column="1" BorderBrush="Gray" Margin="5,5,5,10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ListBox Grid.Row="0" BorderThickness="0">
                    <!--Start Source : https://stackoverflow.com/questions/15632493/wpf-listbox-turn-off-hover-effect -->
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Padding" Value="2,0,0,0"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <!--End Source : https://stackoverflow.com/questions/15632493/wpf-listbox-turn-off-hover-effect -->
                    <ListBoxItem HorizontalContentAlignment="Stretch">
                        <Grid Grid.Row="0" Margin="10,15" Height="25">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Nom :" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0"></TextBlock>
                            <TextBox x:Name="NomTextbox" BorderBrush="{Binding NomBorderValidation}" Text="{Binding Nom, Mode=TwoWay}" Grid.Column="1" Padding="5,2" Margin="10,0"></TextBox>
                        </Grid>
                    </ListBoxItem>
                    <ListBoxItem HorizontalContentAlignment="Stretch">
                        <Grid Grid.Row="1" Margin="10,15" Height="25">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Prénom :" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0"></TextBlock>
                            <TextBox x:Name="PrenomTextbox" BorderBrush="{Binding PrenomBorderValidation}" Text="{Binding Prenom, Mode=TwoWay}" Grid.Column="1" Padding="5,2" Margin="10,0"></TextBox>
                        </Grid>
                    </ListBoxItem>
                    <ListBoxItem HorizontalContentAlignment="Stretch">
                        <Grid Grid.Row="2" Margin="10,15" Height="25">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Description :" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0"></TextBlock>
                            <TextBox x:Name="DescriptionTextbox" BorderBrush="{Binding DescriptionBorderValidation}" Text="{Binding Description, Mode=TwoWay}" Grid.Column="1" Padding="5,2" Margin="10,0"></TextBox>
                        </Grid>
                    </ListBoxItem>
                    <ListBoxItem HorizontalContentAlignment="Stretch">
                        <Grid Grid.Row="3" Margin="10,15" Height="25">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Montant à financer :" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0"></TextBlock>
                            <TextBox x:Name="CapitalTextBox" BorderBrush="{Binding CapitalBorderValidation}" Text="{Binding MontantCapital, Mode=TwoWay, StringFormat='{}{0:###,###,###.##\\$}'}" Grid.Column="1" Padding="5,2" Margin="10,0"></TextBox>
                        </Grid>
                    </ListBoxItem>
                    <ListBoxItem HorizontalContentAlignment="Stretch">
                        <Grid Grid.Row="4" Margin="10,15" Height="25">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Taux d'intérêt annuel :" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0"></TextBlock>
                            <TextBox x:Name="TauxAnnuelTextbox" BorderBrush="{Binding TauxAnnuelBorderValidation}" Text="{Binding TauxAnnuel, Mode=TwoWay, StringFormat='{}{0:#.##\\%}'}" Grid.Column="1" Padding="5,2" Margin="10,0"></TextBox>
                        </Grid>
                    </ListBoxItem>
                    <ListBoxItem HorizontalContentAlignment="Stretch">
                        <Grid Grid.Row="5" Margin="10,15">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Période :" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0"></TextBlock>
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0" Height="40">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <RadioButton x:Name="MoisRadioButton" Grid.Row="0" GroupName="periode" Content="Mois" IsChecked="{Binding MoisRadioButtonState, Mode=TwoWay}" Checked="MoisRadioButton_Checked"/>
                                    <RadioButton x:Name="AnneeRadioButton" Grid.Row="1" GroupName="periode" Content="Annee" IsChecked="{Binding AnneeRadioButtonState, Mode=TwoWay}" Checked="AnneeRadioButton_Checked"></RadioButton>
                                </Grid>
                                <TextBox x:Name="PeriodeTextBox" BorderBrush="{Binding PeriodeBorderValidation}" Text="{Binding Periode, Mode=TwoWay, StringFormat={}{0}}" Grid.Column="1" Padding="5,2" Margin="10,0" Height="25" PreviewTextInput="TextBoxPeriode_NumberOnly"></TextBox>
                            </Grid>
                        </Grid>
                    </ListBoxItem>
                    <ListBoxItem HorizontalContentAlignment="Stretch">
                        <Grid Grid.Row="6" Margin="10,15" Height="25" MinHeight="25" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Fréquence :"  Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0"></TextBlock>
                            <Border Grid.Column="1"  Margin="10,0" BorderBrush="{Binding FrequenceBorderValidation}" BorderThickness="1">
                                <ComboBox x:Name="FrequenceComboBox" ItemsSource="{Binding ListeFrequence}" SelectedItem="{Binding Frequence, Mode=TwoWay}" Padding="5,2">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Description}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </Border>
                        </Grid>
                    </ListBoxItem>
                </ListBox>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Command="{Binding CalculerSimulation}">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#FFFFBA80"/>
                                <Setter Property="BorderThickness" Value="3"/>
                                <Setter Property="Content" Value="Calculer"/>
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="Height" Value="50"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Name="Border" BorderThickness="3" Padding="4,2"  CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="Orange">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                    <Setter TargetName="Border" Property="BorderBrush" Value="white" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.Setters>
                                        </Trigger.Setters>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Grid.Column="1" Command="{Binding EnregistrerSimulation}">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#FF7ED17E"/>
                                <Setter Property="BorderThickness" Value="3"/>
                                <Setter Property="Content" Value="Enregitrer"/>
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="Height" Value="50"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Name="Border" BorderThickness="3" Padding="4,2" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="#FF00AF00">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                    <Setter TargetName="Border" Property="BorderBrush" Value="white" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.Setters>
                                        </Trigger.Setters>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Resources>
                    </Button>
                </Grid>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
